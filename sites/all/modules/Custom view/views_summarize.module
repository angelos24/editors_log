<?php

/**
 * Implementation of hook_views_api().
 */
function views_summarize_views_api() {
  return array(
    'api' => 2,
  );
}


/*
 * Implementation of hook_theme()
 */
function views_summarize_theme() {
  return array(
	 'views_summarize_plugin_style_tablesummarized' => array(
     'render element' => 'form',
    ),
     'views_summarize_type_none' => array(
     'variables' => array('data' => array()),
    ),
     'views_summarize_type_spread' => array(
      'variables' => array('data' => array()),
    ),
    'views_summarize_type_total' => array(
      'variables' => array('data' => array()),
    ),
  );
}


/**
 * List all of the handlers
 */
function views_summarize_get_handlers() {
  return array(
    'none'     => t('None'),
    'total'    => t('Total'),
    'spread'   => t('Spread'),
  );
}

/**
 * Display a view as a table summary.
 */
function template_preprocess_views_summarize_views_tablesummarized(&$vars) {
  template_preprocess_views_view_table($vars);
  $handlers = views_summarize_get_handlers();

  if (!count($vars['rows'])) {
    return;
  }

  $opts =& $vars['view']->style_plugin->options['info'];

  if (isset($vars['view']->style_plugin->options['summary_only'])) {
    $vars['summary_only'] = $vars['view']->style_plugin->options['summary_only'];
  }

  $data = array();
  foreach ($vars['rows'] as $row) {
    foreach ($row as $field => $value) {
      $data[$field][] = $value;
    }
  }

  $vars['summarized'] = array();
  foreach ($opts as $field => $settings) {
    if (isset($data[$field])) {
      $theme = 'views_summarize_type_' . $settings['summarize'];
      $vars['summarized'][$field] = theme($theme, array('data' => $data[$field]));
    }
  }
}


/**
 * Theme the form for the table style plugin
 *
 */
function theme_views_summarize_plugin_style_tablesummarized($variables) {
  $form = $variables['form'];

  $output = drupal_render($form['description_markup']);

  $header = array(
    t('Field'),
    t('Column'),
    t('Align'),
    t('Summarize'),
    t('Separator'),
    array(
      'data' => t('Sortable'),
      'align' => 'center',
    ),
    array(
      'data' => t('Default order'),
      'align' => 'center',
    ),
    array(
      'data' => t('Default sort'),
      'align' => 'center',
    ),
    array(
      'data' => t('Hide empty column'),
      'align' => 'center',
    ),
  );
  $rows = array();
  foreach (element_children($form['columns']) as $id) {
    $row = array();
    $row[] = drupal_render($form['info'][$id]['name']);
    $row[] = drupal_render($form['columns'][$id]);
    $row[] = drupal_render($form['info'][$id]['align']);
    $row[] = drupal_render($form['info'][$id]['summarize']);
    $row[] = drupal_render($form['info'][$id]['separator']);
    if (!empty($form['info'][$id]['sortable'])) {
      $row[] = array(
        'data' => drupal_render($form['info'][$id]['sortable']),
        'align' => 'center',
      );
      $row[] = array(
        'data' => drupal_render($form['info'][$id]['default_sort_order']),
        'align' => 'center',
      );
      $row[] = array(
        'data' => drupal_render($form['default'][$id]),
        'align' => 'center',
      );
    }
    else {
      $row[] = '';
      $row[] = '';
      $row[] = '';
    }
    $row[] = array(
      'data' => drupal_render($form['info'][$id]['empty_column']),
      'align' => 'center',
    );
    $rows[] = $row;
  }

  // Add the special 'None' row.
  $rows[] = array(t('None'), '', '', '', '', '', '', array('align' => 'center', 'data' => drupal_render($form['default'][-1])), '');

  $output .= theme('table', array('header' => $header, 'rows' => $rows));
  $output .= drupal_render_children($form);
  return $output;
}


/**
 * Theme: Total value for a numeric column
 */
function theme_views_summarize_type_total($variables) {
  $data = $variables['data'];
  $total = 0;
  foreach ($data as $val) {
    // This allows for negative values and values w/commas to be added
    // correctly.
    $total += (float) preg_replace('/[^0-9\.\-]/', '', $val);
  }
  return 
  $total." hours<br><br>";
}


/**
 * Theme: Spread table for a column
 */
function theme_views_summarize_type_spread($variables) {
  $data = $variables['data'];
  $hist = array();
  foreach ($data as $val) {
    if (!isset($hist[$val])) {
      $hist[$val] = 0;
    }
  }
  
  $rows = array();
  foreach ($hist as $value => $count) {   
      $rows[$value] = array($value, $count);
  }

  return theme('table', array('rows' => $rows));
}

 